{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\order\\list.vue","mtime":1598380179900},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\nexport default {\n  metaInfo: {\n    title: \"Order\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [ClientSideRowModelModule, SetFilterModule, RichSelectModule, MenuModule, ColumnsToolPanelModule, MasterDetailModule],\n      suppliers: [],\n      orders: [],\n      show: false,\n      visible: false,\n      ONumber: '',\n      DatOrder: '',\n      DatDelivery: '',\n      OType: '',\n      CNumber: '',\n      DelStatus: '',\n      Supplier: '',\n      date: null,\n      next: null,\n      error: false,\n      optionsSupplier: [],\n      optionsType: [{\n        value: 'Sample',\n        text: 'Sample'\n      }, {\n        value: 'Customer',\n        text: 'Customer'\n      }],\n      optionsStatus: [{\n        value: 'Delivered',\n        text: 'Delivered'\n      }, {\n        value: 'Not Delivered',\n        text: 'Not Delivered'\n      }]\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Order Number\",\n      field: \"txtOrderNumber\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true\n    }, {\n      headerName: \"Order Date\",\n      field: \"datOrder\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Date\",\n      field: \"datDelivery\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Order Type\",\n      field: \"txtOrderType\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Sample', 'Customer']\n      }\n    }, {\n      headerName: \"Charge Number\",\n      field: \"txtChargeNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Delivery Status\",\n      field: \"txtDeliveryStatus\",\n      filter: 'agTextColumnFilter',\n      cellEditor: 'agRichSelectCellEditor',\n      cellEditorParams: {\n        cellHeight: 50,\n        values: ['Delivered', 'Not Delivered']\n      }\n    }, {\n      headerName: \"Supplier\",\n      field: \"idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    cellValueChanged: function () {\n      var _cellValueChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/order/\".concat(event.node.data.id, \"/\");\n                _context.prev = 1;\n                _context.next = 4;\n                return apiService(endpoint, \"PATCH\", {\n                  txtOrderNumber: event.node.data.txtOrderNumber,\n                  datOrder: event.node.data.datOrder,\n                  datDelivery: event.node.data.datDelivery,\n                  txtOrderType: event.node.data.txtOrderType,\n                  txtChargeNumber: event.node.data.txtChargeNumber,\n                  txtDeliveryStatus: event.node.data.txtDeliveryStatus // idSupplier: event.node.data.idSupplier,\n\n                });\n\n              case 4:\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 6]]);\n      }));\n\n      function cellValueChanged(_x) {\n        return _cellValueChanged.apply(this, arguments);\n      }\n\n      return cellValueChanged;\n    }(),\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    onGridReady: function onGridReady(params) {},\n    getOrder: function getOrder() {\n      var _this = this;\n\n      if (!this.error) {\n        var endpoint = \"/api/order-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this$orders;\n\n          (_this$orders = _this.orders).push.apply(_this$orders, _toConsumableArray(data.results));\n\n          _this.rowData = _this.orders;\n        });\n      }\n    },\n    getSup: function getSup() {\n      var _this2 = this;\n\n      if (!this.error) {\n        var endpoint = \"/api/supplier/\";\n        apiService(endpoint).then(function (data) {\n          var _this2$suppliers;\n\n          (_this2$suppliers = _this2.suppliers).push.apply(_this2$suppliers, _toConsumableArray(data.results));\n\n          _this2.optionsSupplier = _this2.suppliers;\n        });\n      }\n    },\n    addOrder: function addOrder() {\n      var _this3 = this;\n\n      if (this.ONumber) {\n        var endpoint = \"/api/order/\";\n        apiService(endpoint, \"POST\", {\n          txtOrderNumber: this.ONumber,\n          datOrder: this.DatOrder,\n          datDelivery: this.DatDelivery,\n          txtOrderType: this.OType,\n          txtChargeNumber: this.CNumber,\n          txtDeliveryStatus: this.DelStatus,\n          idSupplier: this.Supplier\n        }).then(function (data) {\n          if (data != 'ERROR') {\n            _this3.orders.unshift(data);\n\n            _this3.emptyInput();\n          } else {\n            _this3.error = true;\n          }\n        });\n\n        if (this.error) {\n          this.error = false;\n        }\n      } else {\n        this.error = true;\n      }\n    },\n    openModal: function openModal(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Order?\", {\n        title: \"Please Confirm\",\n        size: \"sm\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteOrder();\n        }\n      });\n    },\n    deleteOrder: function () {\n      var _deleteOrder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var selectedRows, endpoint, index;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                selectedRows = this.gridApi.getSelectedRows();\n                endpoint = \"/api/order/\".concat(selectedRows[0].id, \"/\");\n                _context2.prev = 2;\n                index = this.orders.map(function (e) {\n                  return e.id;\n                }).indexOf(selectedRows[0].id);\n                this.$delete(this.orders, index);\n                _context2.next = 7;\n                return apiService(endpoint, \"DELETE\");\n\n              case 7:\n                this.show = this.show ? false : true;\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10]]);\n      }));\n\n      function deleteOrder() {\n        return _deleteOrder.apply(this, arguments);\n      }\n\n      return deleteOrder;\n    }(),\n    emptyInput: function emptyInput() {\n      this.ONumber = '', this.datOrder = [], this.datDelivery = [], this.OType = [], this.CNumber = '', this.DelStatus = [], this.Supplier = '', this.$root.$emit('bv::toggle::collapse', 'collapse-e');\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    }\n  },\n  created: function created() {\n    this.getSup();\n    this.getOrder();\n    this.getDateToday();\n  }\n};",{"version":3,"sources":["list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'List'\" :folder=\"'Order'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Add-Cart\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Orders</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.orders.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" v-b-toggle.collapse-e></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Order</h5>\n            </b-row>\n            <b-collapse id=\"collapse-e\" class=\"mt-3\">\n              <b-form>\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-form-input id=\"input-1\" v-model=\"ONumber\" type=\"text\" required placeholder=\"Order Number\" ></b-form-input>\n                  </b-col>\n                </b-row>\n                <b-row class=\"mt-3 ml-3 mr-3\">\n                  <b-col md=\"4\">\n                    <b-form-datepicker  id=\"date-1\" v-model=\"DatOrder\" type=\"text\" placeholder=\"Order Date\" ></b-form-datepicker >\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-datepicker  id=\"date-2\" v-model=\"DatDelivery\" type=\"text\" placeholder=\"Delivery Date\" ></b-form-datepicker >\n                  </b-col>\n                  <b-col md=\"4\">\n                    <b-form-select id=\"input-2\" v-model=\"OType\" type=\"text\" placeholder=\"Order Type\" :options=\"optionsType\"></b-form-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"mt-3 ml-3 mr-3\">\n                  <b-col md=\"3\">\n                    <b-form-input id=\"input-3\" v-model=\"CNumber\" type=\"text\" placeholder=\"Charge Number\" ></b-form-input>\n                  </b-col>\n                  <b-col md=\"3\">\n                    <b-form-select id=\"input-4\" v-model=\"DelStatus\" :options=\"optionsStatus\"></b-form-select>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-form-select  id=\"select-1\" v-model=\"Supplier\" :options=\"optionsSupplier\" value-field=\"id\" text-field=\"txtSupplierName\"></b-form-select>\n                  </b-col>\n                </b-row>\n                <b-row class=\"mt-3 ml-3 mr-3\">\n                  <b-col md=\"6\">\n                    <b-button @click=\"emptyInput\" block variant=\"outline-primary\">Delete Input</b-button>\n                  </b-col>\n                  <b-col md=\"6\">\n                    <b-button @click=\"addOrder\" block variant=\"primary\">Add Order</b-button>\n                  </b-col>\n                </b-row>\n                <b-row class=\"ml-3 mr-3\">\n                  <b-col md=\"12\" class=\"mt-3\">\n                    <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                      <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                    </b-alert>\n                  </b-col>\n                </b-row>\n              </b-form>\n            </b-collapse>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridOrders\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @grid-ready=\"onGridReady\"\n                @cellValueChanged=\"cellValueChanged\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-collapse v-model=\"show\" class=\"ml-1 mr-3\">\n      <b-button @click=\"openModal\" variant=\"primary\">Delete Item</b-button>\n    </b-collapse>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\n\nexport default {\n  metaInfo: {    \n    title: \"Order\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n        MasterDetailModule,\n      ],\n      suppliers: [],\n      orders: [],\n      show: false,\n      visible: false,\n      ONumber: '',\n      DatOrder: '',\n      DatDelivery: '',\n      OType: '',\n      CNumber: '',\n      DelStatus: '',\n      Supplier: '',\n      date: null,\n      next: null,\n      error: false,\n      optionsSupplier: [],\n      optionsType: [\n        { value: 'Sample', text: 'Sample' },\n        { value: 'Customer', text: 'Customer' },\n      ],\n      optionsStatus: [\n        { value: 'Delivered', text: 'Delivered' },\n        { value: 'Not Delivered', text: 'Not Delivered' },\n      ],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Order Number\", field: \"txtOrderNumber\", filter: 'agTextColumnFilter', checkboxSelection: true,},\n      {headerName: \"Order Date\", field: \"datOrder\", filter: 'agTextColumnFilter',},\n      {headerName: \"Delivery Date\", field: \"datDelivery\", filter: 'agTextColumnFilter',},\n      {headerName: \"Order Type\", field: \"txtOrderType\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Sample', 'Customer']}},\n      {headerName: \"Charge Number\", field: \"txtChargeNumber\", filter: 'agTextColumnFilter',},\n      {headerName: \"Delivery Status\", field: \"txtDeliveryStatus\", filter: 'agTextColumnFilter', cellEditor: 'agRichSelectCellEditor', cellEditorParams: { cellHeight: 50, values: ['Delivered', 'Not Delivered']}},\n      {headerName: \"Supplier\", field: \"idSupplier.txtSupplierName\", filter: 'agTextColumnFilter', editable: false},\n    ],\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    async cellValueChanged(event) {     \n      let endpoint = `/api/order/${event.node.data.id}/`;\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtOrderNumber: event.node.data.txtOrderNumber,\n          datOrder: event.node.data.datOrder,\n          datDelivery: event.node.data.datDelivery,\n          txtOrderType: event.node.data.txtOrderType,\n          txtChargeNumber: event.node.data.txtChargeNumber,\n          txtDeliveryStatus: event.node.data.txtDeliveryStatus,\n          // idSupplier: event.node.data.idSupplier,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    onGridReady(params) { \n    },\n    getOrder() {\n      if (!this.error) {\n        let endpoint = `/api/order-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.orders.push(...data.results);\n            this.rowData = this.orders\n          })\n      }\n    },\n    getSup() {\n      if (!this.error) {\n        let endpoint = `/api/supplier/`;\n        apiService(endpoint)\n          .then(data => {\n            this.suppliers.push(...data.results);\n            this.optionsSupplier = this.suppliers\n          })\n      }\n    },\n    addOrder() {\n      if (this.ONumber) {\n        let endpoint = `/api/order/`;\n        apiService(endpoint, \"POST\", { \n          txtOrderNumber: this.ONumber,\n          datOrder: this.DatOrder,\n          datDelivery: this.DatDelivery,\n          txtOrderType: this.OType,\n          txtChargeNumber: this.CNumber,\n          txtDeliveryStatus: this.DelStatus,\n          idSupplier: this.Supplier\n          })\n          .then(data => {\n            if (data != 'ERROR'){\n              this.orders.unshift(data);\n              this.emptyInput();\n            } else {\n              this.error = true;\n            }\n          })\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Order?\", {\n          title: \"Please Confirm\",\n          size: \"sm\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteOrder();\n          }\n        })\n    },\n    async deleteOrder() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      let endpoint = `/api/order/${selectedRows[0].id}/`;\n      try {\n        var index = this.orders.map(function(e) { return e.id; }).indexOf(selectedRows[0].id);\n        this.$delete(this.orders, index)\n        await apiService(endpoint, \"DELETE\")\n        this.show = this.show ? false : true\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    emptyInput() {\n      this.ONumber = '',\n      this.datOrder = [],\n      this.datDelivery = [],\n      this.OType = [],\n      this.CNumber = '',\n      this.DelStatus = [],\n      this.Supplier = '',\n\n      this.$root.$emit('bv::toggle::collapse', 'collapse-e')\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n  },\n  created() {\n    this.getSup();\n    this.getOrder();\n    this.getDateToday();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/order"}]}
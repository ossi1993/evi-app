{"remainingRequest":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-list.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\src\\views\\app\\device\\device-list.vue","mtime":1598380268910},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Anwender\\SJO\\evi\\evi\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _toConsumableArray from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Anwender/SJO/evi/evi/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\nexport default {\n  metaInfo: {\n    title: \"Device\"\n  },\n  components: {\n    AgGridVue: AgGridVue\n  },\n  data: function data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [ClientSideRowModelModule, SetFilterModule, RichSelectModule, MenuModule, ColumnsToolPanelModule, MasterDetailModule],\n      devices: [],\n      models: [],\n      show: false,\n      visible: false,\n      SNumber: '',\n      DPosition: '',\n      Model: '',\n      date: null,\n      next: null,\n      error: false,\n      optionsModels: []\n    };\n  },\n  beforeMount: function beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [{\n      headerName: \"Model Name\",\n      field: \"idModel.txtModelName\",\n      filter: 'agTextColumnFilter',\n      checkboxSelection: true,\n      editable: false\n    }, {\n      headerName: \"Serial Number\",\n      field: \"txtSerialNumber\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Device Position\",\n      field: \"txtDevicePosition\",\n      filter: 'agTextColumnFilter'\n    }, {\n      headerName: \"Manufacturer\",\n      field: \"idModel.idManufacturer.txtManufacturerName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }, {\n      headerName: \"Supplier\",\n      field: \"idModel.idSupplier.txtSupplierName\",\n      filter: 'agTextColumnFilter',\n      editable: false\n    }], this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted: function mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    cellValueChanged: function () {\n      var _cellValueChanged = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n        var endpoint;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                endpoint = \"/api/device/\".concat(event.node.data.id, \"/\");\n                console.log(event.node.data.id);\n                _context.prev = 2;\n                _context.next = 5;\n                return apiService(endpoint, \"PATCH\", {\n                  txtSerialNumber: event.node.data.txtSerialNumber,\n                  txtDevicePosition: event.node.data.txtDevicePosition // idModel: event.node.data.idModel,\n\n                });\n\n              case 5:\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 7]]);\n      }));\n\n      function cellValueChanged(_x) {\n        return _cellValueChanged.apply(this, arguments);\n      }\n\n      return cellValueChanged;\n    }(),\n    onRowSelected: function onRowSelected(event) {\n      this.show = this.show ? false : true;\n    },\n    onGridReady: function onGridReady(params) {},\n    getDevices: function getDevices() {\n      var _this = this;\n\n      if (!this.error) {\n        var endpoint = \"/api/device-list/\";\n        apiService(endpoint).then(function (data) {\n          var _this$devices;\n\n          (_this$devices = _this.devices).push.apply(_this$devices, _toConsumableArray(data.results));\n\n          _this.rowData = _this.devices;\n        });\n      }\n    },\n    getModels: function getModels() {\n      var _this2 = this;\n\n      if (!this.error) {\n        var endpoint = \"/api/model/\";\n        apiService(endpoint).then(function (data) {\n          var _this2$models;\n\n          (_this2$models = _this2.models).push.apply(_this2$models, _toConsumableArray(data.results));\n\n          _this2.optionsModels = _this2.models;\n        });\n      }\n    },\n    addDevice: function addDevice() {\n      var _this3 = this;\n\n      if (this.SNumber) {\n        var endpoint = \"/api/device/\";\n        apiService(endpoint, \"POST\", {\n          txtSerialNumber: this.SNumber,\n          txtDevicePosition: this.DPosition,\n          idModel: this.Model\n        }).then(function (data) {\n          if (data) {\n            _this3.devices.unshift(data);\n          } else {\n            _this3.error = true;\n          }\n        });\n        this.emptyInput();\n\n        if (this.error) {\n          this.error = false;\n        }\n      } else {\n        this.error = true;\n      }\n    },\n    openModal: function openModal(params) {\n      var _this4 = this;\n\n      this.$bvModal.msgBoxConfirm(\"Are you sure you want to delete the selected Device?\", {\n        title: \"Please Confirm\",\n        size: \"sm\",\n        buttonSize: \"sm\",\n        okVariant: \"danger\",\n        okTitle: \"YES\",\n        cancelTitle: \"NO\",\n        footerClass: \"p-2\",\n        hideHeaderClose: false,\n        centered: true\n      }).then(function (value) {\n        if (value) {\n          _this4.deleteDevice();\n        }\n      });\n    },\n    deleteDevice: function () {\n      var _deleteDevice = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var selectedRows, endpoint, index;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                selectedRows = this.gridApi.getSelectedRows();\n                endpoint = \"/api/device/\".concat(selectedRows[0].id, \"/\");\n                _context2.prev = 2;\n                index = this.devices.map(function (e) {\n                  return e.id;\n                }).indexOf(selectedRows[0].id);\n                this.$delete(this.devices, index);\n                _context2.next = 7;\n                return apiService(endpoint, \"DELETE\");\n\n              case 7:\n                this.show = this.show ? false : true;\n                _context2.next = 13;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.log(_context2.t0);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 10]]);\n      }));\n\n      function deleteDevice() {\n        return _deleteDevice.apply(this, arguments);\n      }\n\n      return deleteDevice;\n    }(),\n    emptyInput: function emptyInput() {\n      this.SNumber = '', this.DPosition = '', this.Model = [], this.$root.$emit('bv::toggle::collapse', 'collapse-e');\n    },\n    getDateToday: function getDateToday() {\n      var today = new Date();\n      this.date = today.getDate() + ' / ' + (today.getMonth() + 1) + ' / ' + today.getFullYear();\n    }\n  },\n  created: function created() {\n    this.getDevices();\n    this.getModels();\n    this.getDateToday();\n  }\n};",{"version":3,"sources":["device-list.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <!-- ============ Body content start ============= -->\n  <div class=\"main-content\">\n    <breadcumb :page=\"'Device List'\" :folder=\"'Device'\" />\n    <b-row>\n      <!-- ICON BG -->\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Computer-2\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Devices</p>\n            <p class=\"inline text-primary text-24 line-height-1 mb-2\">{{ this.devices.length }}</p>\n          </div>\n        </b-card>\n      </b-col>\n      <b-col lg=\"6\" md=\"6\" sm=\"12\">\n        <b-card\n          class=\"card-icon-bg card-icon-bg-primary o-hidden mb-30 text-center\"\n        >\n          <i class=\"i-Calendar\"></i>\n          <div class=\"content\">\n            <p class=\"text-muted mt-2 mb-0\">Date</p>\n            <p class=\"text-primary text-24 line-height-1 mb-2\"><nobr>{{ this.date }}</nobr></p>\n          </div>\n        </b-card>\n      </b-col>\n    </b-row>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0 mb-3\">\n            <b-row class=\"ml-3\">\n              <i class=\"nav-icon i-Add mt-3\" style=\"font-size: 20px\" v-b-toggle.collapse-e></i>\n              <h5 class=\"card-title border-bottom p-3 mb-2\">New Device</h5>\n            </b-row>\n            <b-collapse id=\"collapse-e\" class=\"mt-3\">\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"4\">\n                  <b-form-select  id=\"select-1\" v-model=\"Model\" :options=\"optionsModels\" value-field=\"id\" text-field=\"txtModelName\"></b-form-select>\n                </b-col>\n                <b-col md=\"4\">\n                  <b-form-input id=\"input-1\" v-model=\"SNumber\" type=\"text\" placeholder=\"Serial Number\" ></b-form-input>\n                </b-col>\n                <b-col md=\"4\">\n                  <b-form-input id=\"input-2\" v-model=\"DPosition\" type=\"text\" placeholder=\"Device Position\" ></b-form-input>\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"6\">\n                  <b-button @click=\"emptyInput\" block variant=\"outline-primary\">Delete Input</b-button>\n                </b-col>\n                <b-col md=\"6\">\n                  <b-button @click=\"addDevice\" block variant=\"primary\">Add Device</b-button>\n                </b-col>\n              </b-row>\n              <b-row class=\"ml-3 mt-3 mr-3\">\n                <b-col md=\"12\">\n                  <b-alert v-if=\"error\" show variant=\"alert alert-card alert-danger\" dismissible>\n                    <strong class=\"text-capitalize\">Error!</strong> The Input is not valid.\n                  </b-alert>\n                </b-col>\n              </b-row>\n            </b-collapse>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card mb-30\">\n          <div class=\"card-body p-0\">\n            <AgGridVue class=\"ag-theme-alpine\"\n                id=\"gridDevices\"\n                :defaultColDef=\"defaultColDef\"\n                :columnDefs=\"columnDefs\"\n                :rowSelection=\"rowSelection\"\n                :rowData=\"rowData\"\n                :gridOptions=\"gridOptions\"\n                :suppressRowClickSelection=\"true\"\n                @grid-ready=\"onGridReady\"\n                @cellValueChanged=\"cellValueChanged\"\n                @row-selected=\"onRowSelected\"\n                :masterDetail=\"true\"\n                :detailCellRendererParams=\"detailCellRendererParams\"\n                :pagination=\"true\"\n                :paginationPageSize=\"10\"\n                :domLayout=\"domLayout\"\n                :modules=\"modules\">\n            </AgGridVue>\n          </div>\n        </div>\n      </div>\n    </div>\n    <b-collapse v-model=\"show\" class=\"ml-1 mr-3\">\n      <b-button @click=\"openModal\" variant=\"primary\">Delete Device</b-button>\n    </b-collapse>\n  </div>\n  <!-- ============ Body content End ============= -->\n</template>\n<script>\nimport { apiService } from \"@/common/api.service.js\";\nimport { AgGridVue } from '@ag-grid-community/vue';\nimport { ClientSideRowModelModule } from \"@ag-grid-community/client-side-row-model\";\nimport { RichSelectModule } from '@ag-grid-enterprise/rich-select';\nimport { MenuModule } from '@ag-grid-enterprise/menu';\nimport { ColumnsToolPanelModule } from '@ag-grid-enterprise/column-tool-panel';\nimport { SetFilterModule } from '@ag-grid-enterprise/set-filter';\nimport { AllCommunityModules } from '@ag-grid-community/all-modules';\nimport { MasterDetailModule } from '@ag-grid-enterprise/master-detail';\n\nexport default {\n  metaInfo: {    \n    title: \"Device\"\n  },\n  components: {\n    AgGridVue\n  },\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      columnDefs: null,\n      columnDefsMod: null,\n      rowData: null,\n      rowDataMod: null,\n      rowSelection: null,\n      defaultColDef: null,\n      frameworkComponents: null,\n      detailCellRendererParams: null,\n      domLayout: null,\n      modules: [\n        ClientSideRowModelModule,\n        SetFilterModule,\n        RichSelectModule,\n        MenuModule,\n        ColumnsToolPanelModule,\n        MasterDetailModule,\n      ],\n      devices: [],\n      models: [],\n      show: false,\n      visible: false,\n      SNumber: '',\n      DPosition: '',\n      Model: '',\n      date: null,\n      next: null,\n      error: false,\n      optionsModels: [],\n    };\n  },\n  beforeMount() {\n    this.gridOptions = {};\n    this.columnDefs = [\n      {headerName: \"Model Name\", field: \"idModel.txtModelName\", filter: 'agTextColumnFilter', checkboxSelection: true,  editable: false},\n      {headerName: \"Serial Number\", field: \"txtSerialNumber\", filter: 'agTextColumnFilter',},\n      {headerName: \"Device Position\", field: \"txtDevicePosition\", filter: 'agTextColumnFilter',},\n      {headerName: \"Manufacturer\", field: \"idModel.idManufacturer.txtManufacturerName\", filter: 'agTextColumnFilter', editable: false},\n      {headerName: \"Supplier\", field: \"idModel.idSupplier.txtSupplierName\", filter: 'agTextColumnFilter', editable: false},\n    ],\n    this.defaultColDef = {\n      flex: 1,\n      editable: true,\n      resizable: true,\n      sortable: true,\n      filter: true,\n      floatingFilter: true,\n    };\n    this.rowSelection = 'single';\n    this.domLayout = 'autoHeight';\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n    async cellValueChanged(event) {     \n      let endpoint = `/api/device/${event.node.data.id}/`;\n      console.log(event.node.data.id)\n      try {\n        await apiService(endpoint, \"PATCH\", { \n          txtSerialNumber: event.node.data.txtSerialNumber,\n          txtDevicePosition: event.node.data.txtDevicePosition,\n          // idModel: event.node.data.idModel,\n        })\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    onRowSelected(event) {\n      this.show = this.show ? false : true\n    },\n    onGridReady(params) { \n    },\n    getDevices() {\n      if (!this.error) {\n        let endpoint = `/api/device-list/`;\n        apiService(endpoint)\n          .then(data => {\n            this.devices.push(...data.results);\n            this.rowData = this.devices\n          })\n      }\n    },\n    getModels() {\n      if (!this.error) {\n        let endpoint = `/api/model/`;\n        apiService(endpoint)\n          .then(data => {\n            this.models.push(...data.results);\n            this.optionsModels = this.models\n          })\n      }\n    },\n    addDevice() {\n      if (this.SNumber) {\n        let endpoint = `/api/device/`;\n        apiService(endpoint, \"POST\", { \n          txtSerialNumber: this.SNumber, \n          txtDevicePosition: this.DPosition, \n          idModel: this.Model \n          })\n          .then(data => {\n            if (data){\n              this.devices.unshift(data)\n            } else {\n              this.error = true;\n            }\n          })\n        this.emptyInput();\n        if (this.error) {\n          this.error = false;\n        }\n        } else {\n          this.error = true;\n        }\n    },\n    openModal(params) {\n      this.$bvModal\n        .msgBoxConfirm(\"Are you sure you want to delete the selected Device?\", {\n          title: \"Please Confirm\",\n          size: \"sm\",\n          buttonSize: \"sm\",\n          okVariant: \"danger\",\n          okTitle: \"YES\",\n          cancelTitle: \"NO\",\n          footerClass: \"p-2\",\n          hideHeaderClose: false,\n          centered: true\n        })\n        .then(value => {\n          if (value) {\n            this.deleteDevice();\n          }\n        })\n    },\n    async deleteDevice() {\n      var selectedRows = this.gridApi.getSelectedRows();\n      let endpoint = `/api/device/${selectedRows[0].id}/`;\n      try {\n        var index = this.devices.map(function(e) { return e.id; }).indexOf(selectedRows[0].id);\n        this.$delete(this.devices, index)\n        await apiService(endpoint, \"DELETE\")\n        this.show = this.show ? false : true\n      }\n      catch (err) {\n        console.log(err)\n      }\n    },\n    emptyInput() {\n      this.SNumber = '',\n      this.DPosition = '',\n      this.Model = [],\n\n      this.$root.$emit('bv::toggle::collapse', 'collapse-e')\n    },\n    getDateToday() {\n      var today = new Date();\n      this.date = today.getDate()+' / '+(today.getMonth()+1)+' / '+today.getFullYear();\n    },\n  },\n  created() {\n    this.getDevices();\n    this.getModels();\n    this.getDateToday();\n  },\n};\n</script>\n<style>\n  i:focus,\n  input:focus,\n  select:focus,\n  textarea:focus,\n  button:focus {\n      outline: none;\n  }\n</style>\n"],"sourceRoot":"src/views/app/device"}]}